@import 'colors';
@import 'navigation';
@import 'variables';
@import 'prism';
@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  box-sizing: border-box;
  scroll-behavior: smooth;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

@layer base {
  html {
    font-family: 'Source Serif Pro', 'Georgia', serif;
  }
}

body {
  background-color: var(--color-bg);
  color: var(--color-fg);
  font-family: var(--font-family-base);
}

a:not(.nav-item, .no-underline) {
  @apply underline decoration-sky-500 decoration-1 transition hover:delay-300 hover:bg-sky-500;
}

h1,
h2,
h3,
h4,
h5 {
  @apply font-sans font-bold mb-4;
}

h1 {
  @apply text-4xl;
}

h2 {
  @apply text-3xl;
}

h3 {
  @apply text-2xl;
}

h4 {
  @apply text-xl;
}

h5 {
  @apply text-lg;
}

.menu {
  white-space: nowrap;
  text-transform: uppercase;
  /* position: -webkit-sticky; */
  position: sticky;
  top: 0px;
  width: 100%;
  padding: 0.75rem 0.25rem;
  transition-property: box-shadow;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.5s;
}

.page-header {
  display: grid;
  grid-template-columns: 2fr 1fr;
  grid-template-rows: 1fr;
  padding: 20px;
}

.post-container {
  display: grid;
  grid-column: 1 / -1;
  grid-template-columns: repeat(10, 1fr);
  width: 100%;
}

.post-title {
  grid-column: 2 / -1;
  margin: 0;
  padding: 0;
}

.post-readtime {
  grid-column: 2 / -1;
}

.post-content {
  grid-column: 2 / -2;
}

.text-reading {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

picture {
  display: block;
  max-width: 100%;
  height: auto;
}

.post img {
  margin-bottom: 0;
}

.post p {
  margin-top: 0;
}

p code,
li code {
  background-color: var(--color-bg-code);
  border-radius: 0.3em;
  color: var(--color-fg-code);
  white-space: normal;
  font-weight: 400 !important;
}

.prose :where(code):not(:where([class~='not-prose'] *))::before {
  content: '';
}
.prose :where(code):not(:where([class~='not-prose'] *))::after {
  content: '';
}
